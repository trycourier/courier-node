/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { CourierClient } from "../../src/Client";

describe("Templates", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new CourierClient({ authorizationToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            paging: { cursor: "cursor", more: true },
            results: [
                {
                    created_at: 1000000,
                    id: "id",
                    routing: { method: "all", channels: ["channels", "channels"] },
                    tags: [
                        {
                            data: [
                                { id: "id", name: "name" },
                                { id: "id", name: "name" },
                            ],
                        },
                        {
                            data: [
                                { id: "id", name: "name" },
                                { id: "id", name: "name" },
                            ],
                        },
                    ],
                    title: "title",
                    updated_at: 1000000,
                },
                {
                    created_at: 1000000,
                    id: "id",
                    routing: { method: "all", channels: ["channels", "channels"] },
                    tags: [
                        {
                            data: [
                                { id: "id", name: "name" },
                                { id: "id", name: "name" },
                            ],
                        },
                        {
                            data: [
                                { id: "id", name: "name" },
                                { id: "id", name: "name" },
                            ],
                        },
                    ],
                    title: "title",
                    updated_at: 1000000,
                },
            ],
        };
        server.mockEndpoint().get("/notifications").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.templates.list();
        expect(response).toEqual({
            paging: {
                cursor: "cursor",
                more: true,
            },
            results: [
                {
                    created_at: 1000000,
                    id: "id",
                    routing: {
                        method: "all",
                        channels: ["channels", "channels"],
                    },
                    tags: [
                        {
                            data: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                        },
                        {
                            data: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                        },
                    ],
                    title: "title",
                    updated_at: 1000000,
                },
                {
                    created_at: 1000000,
                    id: "id",
                    routing: {
                        method: "all",
                        channels: ["channels", "channels"],
                    },
                    tags: [
                        {
                            data: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                        },
                        {
                            data: [
                                {
                                    id: "id",
                                    name: "name",
                                },
                                {
                                    id: "id",
                                    name: "name",
                                },
                            ],
                        },
                    ],
                    title: "title",
                    updated_at: 1000000,
                },
            ],
        });
    });
});
